step26:
--------
	Create a EmployeeService.java file inside "com.ihub.www.service" package.

EmployeeService.java
---------------------
package com.ihub.www.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ihub.www.model.Employee;
import com.ihub.www.repo.EmployeeRepository;

@Service
public class EmployeeService 
{
	@Autowired
	EmployeeRepository employeeRepository;
	
	public Employee createEmployee(Employee employee)
	{
		return employeeRepository.save(employee);
	}
}


step27:
------
	Create a EmployeeController.java file inside "com.ihub.www.controller" package.

EmployeeController.java
-------------------------
package com.ihub.www.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ihub.www.model.Employee;
import com.ihub.www.service.EmployeeService;

@CrossOrigin(value = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1")
public class EmployeeController 
{
	@Autowired
	EmployeeService employeeService;
	
	@PostMapping("/employees")
	public Employee createEmployee(@RequestBody Employee employee)
	{
		return employeeService.createEmployee(employee);
	}
}

step28:
-------
	Run the spring boot starter project.
	
step29:
------
	Test the application by using POSTMAN Tool.

	ex:
		HTTP method			URL
		-----------			--------
		POST				http://localhost:9191/api/v1/employees 
						Body 
							Raw (json)

						{
    							"name":"Alan Morries",
    							"doj":"17-01-2025",
    							"dept":
							{
            							"deptName" : "IT",
            							"designation" : "Associate Developer"
    							}
						}

step30:
------
	Create "Add Employee" button inside "EmployeeListComponent.js" file.

EmployeeListComponent.js 
-----------------------
import React from 'react'
import { useState } from 'react'
import {useTypewriter,Cursor} from 'react-simple-typewriter';
import {Link} from 'react-router-dom';

function EmployeeListComponent() 
{

   const [text] = useTypewriter({
    words : ["Details", "List", "Info"],
    loop : true,
    typeSpeed:120,
    deleteSpeed:80
   })  

  const [employees,setEmployees]= useState([]);

  return (
    <div className='container mt-5'>

        <h4 className='text-center'> Employee {text}<Cursor/> </h4>

        <div className='row mt-3'>
        <Link to="/add-employee" className='btn btn-warning col-md-2 mb-3'> Add Employee </Link>   

        <table className='table table-bordered table-striped'>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>DOJ</th>
                    <th>Department</th>
                    <th>Designation</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {
                    employees.map(employee =>{
                        return <tr key={employee.id}>
                                    <td>{employee.id}</td>
                                    <td>{employee.name}</td>
                                    <td>{employee.doj}</td>
                                    <td>{employee.dept.departName}</td>
                                    <td>{employee.dept.designation}</td>
                                    <td></td>
                                </tr>
                    })
                }
            </tbody>
        </table>
        </div>
    </div>
  )
}

export default EmployeeListComponent


step31:
------
	Create CreateEmployeeComponent.js file inside "components" folder.


CreateEmployeeComponent.js 
-------------------------
import React from 'react'

function CreateEmployeeComponent() {
  return (
    <div>
      Create Employee Component 
    </div>
  )
}

export default CreateEmployeeComponent


step32:
------
	Add CreateEmployeeComponent.js file to routing file i.e App.js .
App.js 
---------
import React from 'react'
import { useState } from 'react'
import {useTypewriter,Cursor} from 'react-simple-typewriter';
import {Link} from 'react-router-dom';

function EmployeeListComponent() 
{

   const [text] = useTypewriter({
    words : ["Details", "List", "Info"],
    loop : true,
    typeSpeed:120,
    deleteSpeed:80
   })  

  const [employees,setEmployees]= useState([]);

  return (
    <div className='container mt-5'>

        <h4 className='text-center'> Employee {text}<Cursor/> </h4>

        <div className='row mt-3'>
        <Link to="/add-employee" className='btn btn-warning col-md-2 mb-3'> Add Employee </Link>   

        <table className='table table-bordered table-striped'>
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>DOJ</th>
                    <th>Department</th>
                    <th>Designation</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {
                    employees.map(employee =>{
                        return <tr key={employee.id}>
                                    <td>{employee.id}</td>
                                    <td>{employee.name}</td>
                                    <td>{employee.doj}</td>
                                    <td>{employee.dept.departName}</td>
                                    <td>{employee.dept.designation}</td>
                                    <td></td>
                                </tr>
                    })
                }
            </tbody>
        </table>
        </div>
    </div>
  )
}

export default EmployeeListComponent


step33:
------
	Create EmployeeService.js file inside "services" folder and add a function to post the details.

EmployeeService.js
-------------------
import axios from 'axios';
const EMPLOYEE_API = "http://localhost:9191/api/v1/employees";

class EmployeeService
{
    addEmployee(employee)
    {
        return axios.post(EMPLOYEE_API,employee);
    }
}
export default new EmployeeService();



Seguro soft interview question 
==============================

Given a dictionary of words and a string s, check if s can be split into valid words 
from the dictionary.

Input:
	s = "applepenapple"

	wordDict = ["apple","pen"]

output:
	true


import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		String s ="applepenapple";
		Set<String> set = Set.of("apple","pen");
		
		boolean[] db=new boolean[s.length()+1];
		db[0]=true;
		
		for(int i=1;i<db.length;i++)
		{
			for(int j=0;j<i;j++)
			{
				if(db[0] && set.contains(s.substring(j,i)))
				{
					db[i]=true;
					break;
				}
			}
		}
		if(db[db.length-1])
			System.out.println("true");
		else
			System.out.println("false");
	}
}
 




















